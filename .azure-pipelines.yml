# Configuration for Azure Pipelines
########################################################################################

# Only build the master branch, tags, and PRs (on by default) to avoid building random
# branches in the repository until a PR is opened.
trigger:
  branches:
    include:
    - master
    - refs/tags/*


jobs:

# Mac
########################################################################################
- job:
  displayName: 'Mac'

  pool:
    vmImage: 'macOS-10.13'

  variables:
    CONDA_REQUIREMENTS: requirements.txt
    CONDA_REQUIREMENTS_DEV: requirements-dev.txt

  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        PYTHON: '3.7'
      Python36:
        python.version: '3.6'
        PYTHON: '3.6'

  steps:

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  # Get the Fatiando CI scripts (replace "master" with the version you want to use)
  - bash: git clone --branch=master --depth=1 https://github.com/fatiando/continuous-integration.git
    displayName: Fetch the Fatiando CI scripts

  # Setup dependencies and build a conda environment
  # We'll use the local version but you should use the line below instead
  #- scriptPath: continuous-integration/azure/setup-miniconda.sh
  - task: ShellScript@2
    inputs:
      scriptPath: azure/setup-miniconda.sh
    displayName: Setup Miniconda

  # Show installed pkg information for postmortem diagnostic
  - bash: |
      conda activate testing
      conda list
    displayName: List installed packages

  #- task: PublishTestResults@2
    #inputs:
      #testResultsFiles: 'junit/*.xml'
      #testRunTitle: 'Python $(python.version)'
    #condition: succeededOrFailed()

# Linux
########################################################################################
- job:
  displayName: 'Linux'

  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    CONDA_REQUIREMENTS: requirements.txt
    CONDA_REQUIREMENTS_DEV: requirements-dev.txt

  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        PYTHON: '3.7'
      Python36:
        python.version: '3.6'
        PYTHON: '3.6'

  steps:

  - bash: echo "##vso[task.prependpath]/usr/share/miniconda/bin"
    displayName: Add conda to PATH

  # Get the Fatiando CI scripts (replace "master" with the version you want to use)
  - bash: git clone --branch=master --depth=1 https://github.com/fatiando/continuous-integration.git
    displayName: Fetch the Fatiando CI scripts


# Windows
########################################################################################
- job:
  displayName: 'Windows'

  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python36:
        python.version: '3.6'

  steps:

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  # Get the Fatiando CI scripts (replace "master" with the version you want to use)
  - script: git clone --branch=master --depth=1 https://github.com/fatiando/continuous-integration.git
    displayName: Fetch the Fatiando CI scripts

  # Show installed pkg information for postmortem diagnostic
  - script: conda list
    displayName: List installed packages

  #- task: PublishTestResults@2
    #inputs:
      #testResultsFiles: 'junit/*.xml'
      #testRunTitle: 'Python $(python.version)'
    #condition: succeededOrFailed()
